// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package inMemoryRepository is a generated GoMock package.
package inMemoryRepository

import (
	models "hive/models"
	context "context"
	gomock "github.com/golang/mock/gomock"
	go_uuid "github.com/satori/go.uuid"
	reflect "reflect"
	time "time"
)

// MockIInMemoryRepository is a mock of IInMemoryRepository interface
type MockIInMemoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIInMemoryRepositoryMockRecorder
}

// MockIInMemoryRepositoryMockRecorder is the mock recorder for MockIInMemoryRepository
type MockIInMemoryRepositoryMockRecorder struct {
	mock *MockIInMemoryRepository
}

// NewMockIInMemoryRepository creates a new mock instance
func NewMockIInMemoryRepository(ctrl *gomock.Controller) *MockIInMemoryRepository {
	mock := &MockIInMemoryRepository{ctrl: ctrl}
	mock.recorder = &MockIInMemoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIInMemoryRepository) EXPECT() *MockIInMemoryRepositoryMockRecorder {
	return m.recorder
}

// GetSecret mocks base method
func (m *MockIInMemoryRepository) GetSecret(ctx context.Context, id go_uuid.UUID) *models.Secret {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecret", ctx, id)
	ret0, _ := ret[0].(*models.Secret)
	return ret0
}

// GetSecret indicates an expected call of GetSecret
func (mr *MockIInMemoryRepositoryMockRecorder) GetSecret(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecret", reflect.TypeOf((*MockIInMemoryRepository)(nil).GetSecret), ctx, id)
}

// CacheSecret mocks base method
func (m *MockIInMemoryRepository) CacheSecret(ctx context.Context, secret *models.Secret, timeout time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CacheSecret", ctx, secret, timeout)
}

// CacheSecret indicates an expected call of CacheSecret
func (mr *MockIInMemoryRepositoryMockRecorder) CacheSecret(ctx, secret, timeout interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CacheSecret", reflect.TypeOf((*MockIInMemoryRepository)(nil).CacheSecret), ctx, secret, timeout)
}

// GetActualSecret mocks base method
func (m *MockIInMemoryRepository) GetActualSecret(ctx context.Context) *models.Secret {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActualSecret", ctx)
	ret0, _ := ret[0].(*models.Secret)
	return ret0
}

// GetActualSecret indicates an expected call of GetActualSecret
func (mr *MockIInMemoryRepositoryMockRecorder) GetActualSecret(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActualSecret", reflect.TypeOf((*MockIInMemoryRepository)(nil).GetActualSecret), ctx)
}

// CacheActualSecret mocks base method
func (m *MockIInMemoryRepository) CacheActualSecret(ctx context.Context, secret *models.Secret, timeout time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CacheActualSecret", ctx, secret, timeout)
}

// CacheActualSecret indicates an expected call of CacheActualSecret
func (mr *MockIInMemoryRepositoryMockRecorder) CacheActualSecret(ctx, secret, timeout interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CacheActualSecret", reflect.TypeOf((*MockIInMemoryRepository)(nil).CacheActualSecret), ctx, secret, timeout)
}

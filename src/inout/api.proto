syntax = "proto3";
package inout;
option go_package = ".;inout";

// Common

message Pagination {
    bool hasPrevious = 1;
    bool hasNext = 2;
    int64 count = 3;
}

message Error {
    enum ErrorType {
        Unauthenticated = 0;
        Unauthorized = 1;
    }

    string message = 1;
    ErrorType type = 2;
}

// Models

message Role {
    bytes id = 1;
    int64 created = 2;
    string title = 3;
}

message UserRole {
    bytes id = 1;
    int64 created = 2;
    bytes userID = 3;
    bytes roleID = 4;
}

message Session {
    bytes refreshToken = 1;
    string accessToken = 2;
    int64 created = 3;
    int64 expired = 4;
}

message Email {
    bytes id = 1;
    int64 created = 2;
    bytes userID = 3;
    string email = 4;
}

message EmailConfirmation {
    int64 created = 1;
    int64 expire = 2;
    string email = 3;
}

message Phone {
    bytes id = 1;
    int64 created = 2;
    bytes userID = 3;
    string phone = 4;
    string phoneCountryCode = 5;
}

message PhoneConfirmation {
    int64 created = 1;
    int64 expire = 2;
    string phone = 3;
    string phoneCountryCode = 4;
}

message Password {
    bytes id = 1;
    int64 created = 2;
    bytes userID = 3;
}

message User {
    bytes id = 1;
    int64 created = 2;
}

message Secret {
    bytes id = 1;
    int64 created = 2;
    bytes value = 3;
}

message UserView {
    bytes id = 1;
    int64 created = 2;
    repeated string roles = 3;
    repeated string phones = 4;
    repeated string emails = 5;
}

// Roles API

message GetRoleResponseV1 {
    Role data = 1;
}

message CreateRoleResponseV1 {

    message Request {
        string title = 1;
    }

    message ValidationError {
        repeated string title = 1;
    }

    oneof data {
        Role ok = 1;
        ValidationError validationError = 2;
        Error error = 3;
    }
}

message ListRoleResponseV1 {
    Pagination pagination = 1;
    repeated Role data = 2;
}

// User Roles API

message CreateUserRoleResponseV1 {
    message Request {
        bytes userID = 1;
        bytes roleID = 2;
    }

    message ValidationError {
        repeated string userID = 1;
        repeated string roleID = 2;
        repeated string errors = 3;
    }

    oneof data {
        UserRole ok = 1;
        ValidationError validationError = 2;
        Error error = 3;
    }
}

message GetUserRoleResponseV1 {
    UserRole data = 1;
}

message ListUserRolesResponseV1 {
    Pagination pagination = 1;
    repeated UserRole data = 2;
}

// Emails API

message CreateEmailResponseV1 {

    message Request {
        string email = 1;
        string code = 2;
        bytes userID = 3;
    }

    message ValidationError {
        repeated string email = 1;
        repeated string code = 2;
        repeated string userId = 3;
    }

    oneof data {
        Email ok = 1;
        ValidationError validationError = 2;
        Error error = 3;
    }

}

// Emails Confirmation API

message CreateEmailConfirmationResponseV1 {
    message Request {
        string email = 1;
    }

    message ValidationError {
        repeated string email = 1;
    }

    oneof data {
        EmailConfirmation ok = 1;
        ValidationError validationError = 2;
    }
}

// Phones API

message CreatePhoneResponseV1 {

    message Request {
        string phone = 1;
        string code = 2;
        bytes userID = 3;
    }

    message ValidationError {
        repeated string phone = 1;
        repeated string code = 2;
        repeated string userID = 3;
    }

    oneof data {
        Phone ok = 1;
        ValidationError validationError = 2;
        Error error = 3;
    }
}

// Phones Confirmation API

message CreatePhoneConfirmationResponseV1 {
    message Request {
        string phone = 1;
    }

    message ValidationError {
        repeated string phone = 1;
    }

    oneof data {
        PhoneConfirmation ok = 1;
        ValidationError validationError = 2;
    }
}

// Passwords API

message CreatePasswordResponseV1 {

    message Request {
        bytes userID = 1;
        string value = 2;
    }

    message ValidationError {
        repeated string userID = 1;
        repeated string value = 2;
    }

    oneof data {
        Password ok = 1;
        ValidationError validationError = 2;
        Error error = 3;
    }

}

// Users API

message CreateUserResponseV1 {

    message Request {
        string password = 1;
        string phone = 2;
        string email = 3;
        string phoneCode = 4;
        string emailCode = 5;
    }

    message ValidationError {
        repeated string password = 1;
        repeated string phone = 2;
        repeated string email = 3;
        repeated string phoneCode = 4;
        repeated string emailCode = 5;
        repeated string errors = 6;
    }

    oneof data {
        User ok = 1;
        ValidationError validationError = 2;
    }
}

message GetUserResponseV1 {
    User data = 1;
}

message ListUserResponseV1 {
    repeated User data = 1;
}

// Sessions API

message CreateSessionResponseV1 {

    message Request {
        string fingerprint = 1;
        string userAgent = 2;
    }

    message ValidationError {
        repeated string email = 1;
        repeated string emailCode = 2;
        repeated string phone = 3;
        repeated string phoneCode = 4;
        repeated string phoneCountryCode = 5;
        repeated string password = 6;
        repeated string fingerprint = 7;
        repeated string userAgent = 8;
    }

    oneof data {
        Session ok = 1;
        ValidationError validationError = 2;
    }
}

// Secrets API

message GetSecretResponseV1 {
    Secret data = 1;
}

// User Views API

message GetUserViewResponseV1 {
    UserView data = 1;
}

message ListUserViewResponseV1 {
    Pagination pagination = 1;
    repeated UserView data = 2;
}
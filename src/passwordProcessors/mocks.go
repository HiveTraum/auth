// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package passwordProcessors is a generated GoMock package.
package passwordProcessors

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIPasswordProcessor is a mock of IPasswordProcessor interface
type MockIPasswordProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockIPasswordProcessorMockRecorder
}

// MockIPasswordProcessorMockRecorder is the mock recorder for MockIPasswordProcessor
type MockIPasswordProcessorMockRecorder struct {
	mock *MockIPasswordProcessor
}

// NewMockIPasswordProcessor creates a new mock instance
func NewMockIPasswordProcessor(ctrl *gomock.Controller) *MockIPasswordProcessor {
	mock := &MockIPasswordProcessor{ctrl: ctrl}
	mock.recorder = &MockIPasswordProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIPasswordProcessor) EXPECT() *MockIPasswordProcessorMockRecorder {
	return m.recorder
}

// EncodePassword mocks base method
func (m *MockIPasswordProcessor) EncodePassword(arg0 context.Context, arg1 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EncodePassword", arg0, arg1)
	ret0, _ := ret[0].(string)
	return ret0
}

// EncodePassword indicates an expected call of EncodePassword
func (mr *MockIPasswordProcessorMockRecorder) EncodePassword(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EncodePassword", reflect.TypeOf((*MockIPasswordProcessor)(nil).EncodePassword), arg0, arg1)
}

// VerifyPassword mocks base method
func (m *MockIPasswordProcessor) VerifyPassword(ctx context.Context, password, encodedPassword string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyPassword", ctx, password, encodedPassword)
	ret0, _ := ret[0].(bool)
	return ret0
}

// VerifyPassword indicates an expected call of VerifyPassword
func (mr *MockIPasswordProcessorMockRecorder) VerifyPassword(ctx, password, encodedPassword interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyPassword", reflect.TypeOf((*MockIPasswordProcessor)(nil).VerifyPassword), ctx, password, encodedPassword)
}
